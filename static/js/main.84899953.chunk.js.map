{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","App.js","serviceWorker.js","index.js","logo.svg"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","PROXY","PdfJsLib","GlobalWorkerOptions","workerSrc","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","zips","status","progress","maxDownloadFiles","input","React","createRef","addTextToZip","bind","assertThisInitialized","downloadZip","handleTryOnClick","handleDownloadOnClick","current","value","collection","feed","_this2","url","_URLParse","URLParse","hostname","path","includes","setState","defineProperty","slice","concat","indexOf","replace","fetch","method","then","response","json","jsonFeed","docs","flatMap","doc","url_fulltext","manifests","forEach","manifest","retrieveManifest","label","generateAsync","type","blob","saveAs","err","console","log","filename","texts","_this3","objectSpread","JSZip","Promise","all","map","promise","catch","textChunks","text","join","file","manifestUri","uri","_this4","Manifesto","create","getSequences","seq","getRenderings","rendering","options","resource","__jsonld","flat","pdfFiles","pdfFile","pdfDoc","getDocument","onProgress","_ref","loaded","total","size","Math","pow","toFixed","fileSize","pdf","toConsumableArray","Array","_pdfInfo","numPages","pageNumber","getPage","pdfPage","getTextContent","textContent","items","str","files","length","_this5","react_default","a","createElement","min","max","item","idx","key","downloads","zip","href","onClick","className","src","logo","alt","title","ref","placeholder","Component","Boolean","window","location","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","p"],"mappings":"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","file":"static/js/main.84899953.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 18;","import { parse as URLParse } from 'url';\nimport React, { Component } from 'react';\n\nimport PdfJsLib from 'pdfjs-dist';\nimport JSZip from 'jszip';\nimport saveAs from 'file-saver';\n\nimport flat from 'array.prototype.flat';\nimport Manifesto from 'manifesto.js';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nconst PROXY = 'https://cors-anywhere-vanfexfhcx.now.sh/';\nconst TEST_COLLECTION = 'https://purl.stanford.edu/jt466yc7169';\nPdfJsLib.GlobalWorkerOptions.workerSrc = '//cdnjs.cloudflare.com/ajax/libs/pdf.js/2.0.943/pdf.worker.js';\n\nconst getPDFsFromIIIFManifest = uri => fetch(`${PROXY}${uri}`, { method: 'GET' })\n  .then(response => response.json())\n  .then(manifest => Manifesto\n    .create(manifest)\n    .getSequences()\n    .map(seq => seq\n      .getRenderings()\n      .map(rendering => ({\n        label: rendering.options.resource.__jsonld.label,\n        uri: rendering.id\n      }))\n    )\n  ).then(flat);\n\nconst fileSize = size => {\n    const e = (Math.log(size) / Math.log(1e3)) | 0;\n    return +(size / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zips: {},\n      status: {},\n      progress: null\n    }\n    this.maxDownloadFiles = 10;  // max is limited to 100 by searchworks\n    this.input = React.createRef();\n    this.addTextToZip = this.addTextToZip.bind(this);\n    this.downloadZip = this.downloadZip.bind(this);\n    this.handleTryOnClick = this.handleTryOnClick.bind(this);\n    this.handleDownloadOnClick = this.handleDownloadOnClick.bind(this);\n  }\n\n  handleTryOnClick() {\n    this.input.current.value = TEST_COLLECTION;\n  }\n\n  handleDownloadOnClick() {\n    const url = this.input.current.value;\n    const { hostname, path } = URLParse(url);\n    if (['purl.stanford.edu', 'searchworks.stanford.edu'].includes(hostname)) {\n      this.setState({progress: 0, status: {[[url]]: \"Downloading collection...\"}});\n      let collection;\n      let feed;\n      if (hostname === 'purl.stanford.edu') {\n        collection = path.slice(1);\n        feed = `https://searchworks.stanford.edu/catalog.json?f%5Bcollection%5D%5B%5D=${collection}&per_page=${this.maxDownloadFiles}`;\n      } else if (url.indexOf(\"searchworks.stanford.edu/catalog.atom\") >= 0) {\n        collection = url.replace(\"catalog.atom\", \"catalog.json\");\n        feed = `${collection}&per_page=${this.maxDownloadFiles}`;\n      } else if (url.indexOf('searchworks.stanford.edu/catalog?') >= 0) {\n        collection = url.replace('catalog?', 'catalog.json?');\n        feed = `${collection}&per_page=${this.maxDownloadFiles}`;\n      }\n      fetch(`${PROXY}${feed}`, { method: 'GET' })\n        .then(response => {\n          this.setState({progress: 0});\n          return response.json();\n        })\n        .then(jsonFeed => {\n          return jsonFeed.response.docs.flatMap(doc => `${doc.url_fulltext}/iiif/manifest`);\n        })\n        .then(manifests => {\n          this.setState({status: {[[url]]: \"Downloading contents...\"}});\n          manifests.forEach(manifest => {\n            this.retrieveManifest(collection, manifest);\n          })\n        });\n      this.input.current.value = \"\";\n    }\n  }\n\n  downloadZip(label) {\n    this.state.zips[label].generateAsync({type: 'blob'}).then(function (blob) {\n        saveAs(blob, `${label}.zip`);\n    }, function (err) {\n        console.log(err);\n    });\n  }\n\n  addTextToZip(label, filename, texts) {\n    this.setState({\n      zips: {[[label]]: new JSZip(), ...this.state.zips},\n      status: {...this.state.status, [[filename]]: \"Adding to zip...\"}\n    });\n    Promise.all(texts.map(promise => promise.catch(err => err)))\n    .then(textChunks => {\n      const text = textChunks.join(' ');\n      this.setState({\n        progress: this.state.progress + 1\n      });\n      this.state.zips[label].file(`${filename}.txt`, text);\n      this.setState({\n        status: {...this.state.status, [[filename]]: \"Done\"}\n      });\n      if (this.state.progress === this.maxDownloadFiles) {\n        this.downloadZip(label);\n        this.setState({\n          progress: null,\n          status: {},\n        })\n      }\n    })\n    .catch(err => console.log(err));\n  }\n\n  retrieveManifest(label, manifestUri) {\n    getPDFsFromIIIFManifest(manifestUri).then(pdfFiles => {\n      return pdfFiles.map(pdfFile => {\n        const pdfDoc = PdfJsLib.getDocument(`${PROXY}${pdfFile.uri}`)\n        pdfDoc.onProgress = ({loaded, total}) => {\n          this.setState({status: {...this.state.status, [[pdfFile.label]]: fileSize(loaded)}})\n        }\n        return pdfDoc.then((pdf) => {\n          const texts = [...Array(pdf._pdfInfo.numPages).keys()].map(pageNumber => {\n            this.setState({status: {...this.state.status, [[pdfFile.label]]: `Extractig page ${pageNumber + 1}`}})\n            return pdf.getPage(pageNumber + 1).then(pdfPage => (\n              pdfPage.getTextContent().then(textContent => (\n                textContent.items.map(text => text.str).join(' ')\n              ))\n            ))\n          });\n          this.addTextToZip(label, pdfFile.label, texts);\n        });\n      })\n    }).then(files => {\n      if (files.length === 0) {\n        this.setState({status: {...this.state.status, [[manifestUri]]: \"No PDFs found\"}})\n      }\n    })\n  }\n\n  render() {\n    const progress = (this.state.progress !== null && this.state.progress !== this.maxDownloadFiles) ? (\n      <progress min={0} max={this.maxDownloadFiles} value={this.state.progress} />\n    ) : ('');\n    const status = Object.keys(\n      this.state.status\n    ).map((item, idx) => (\n      [<dt key={`dt${idx}`}>{item}</dt>, <dd key={`dd${idx}`}>{this.state.status[item]}</dd>]\n    ));\n    const downloads = Object.keys(this.state.zips).map((zip, idx) => (\n      <li key=\"li{idx}\">Download <button href=\"#\" onClick={() => this.downloadZip(zip)}>{zip}.zip</button></li>\n    ));\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            To download the available plain texts of a IIIF catalog collection containing PDF files,\n            <br />\n            enter its URL and click on Download\n            (only the first <acronym title=\"This is only a proof of concept\">~{this.maxDownloadFiles} items</acronym> will be retrieved)\n          </p>\n          <p>\n            <input type=\"text\" ref={this.input} placeholder={TEST_COLLECTION} />\n            <input type=\"submit\" onClick={this.handleDownloadOnClick} value=\"Download\" />\n            <br />\n            <small>\n              Try the <button href=\"#\" onClick={this.handleTryOnClick}>\n                Jarndyce Single-Volume Nineteenth-Century Novel Collection, 1823-1914\n              </button>.\n            </small>\n          </p>\n          <div>\n            {progress}\n            <dl>\n              {status}\n            </dl>\n            <ul>\n              {downloads}\n            </ul>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1e0f9ac8.svg\";"],"sourceRoot":""}